def isLeapYear(year):
    if (year%4 == 0 and year%100 != 0) or year%400 == 0:
        return 29
    else:
        return 28

def daysInMonth(month1,year1):
    if month1 == 1:
        return 31
    if month1 == 2:
        return isLeapYear(year1)
    if month1 == 3:
        return 31
    if month1 == 4:
        return 30
    if month1 == 5:
        return 31
    if month1 == 6:
        return 30
    if month1 == 7:
        return 31
    if month1 == 8:
        return 31
    if month1 == 9:
        return 30
    if month1 == 10:
        return 31
    if month1 == 11:
        return 30
    if month1 == 12:
        return 31
        
def nextDay(year, month, day):
    """Simple version: assume every month has 30 days"""
    if day < daysInMonth(month,year):
            return year, month, day + 1
    else:
        if month == 12:
            return year + 1, 1, 1
        else:
            return year, month + 1, 1
        
def dateIsBefore(year1, month1, day1, year2, month2, day2):
    """Returns True if year1-month1-day1 is before year2-month2-day2. Otherwise, returns False."""
    if year1 < year2:
        return True
    if year1 == year2:
        if month1 < month2:
            return True
        if month1 == month2:
            return day1 < day2
    return False        

def daysBetweenDates(year1, month1, day1, year2, month2, day2):
    assert not dateIsBefore(year2, month2, day2, year1, month1, day1)
    days = 0
    while dateIsBefore(year1, month1, day1, year2, month2, day2):
        year1, month1, day1 = nextDay(year1, month1, day1)
        days += 1
    return days

def test():
    test_cases = [((2012,1,1,2012,2,28), 58), 
                  ((2012,1,1,2012,3,1), 60),
                  ((2011,6,30,2012,6,30), 366),
                  ((2011,1,1,2012,8,8), 585 ),
                  ((1900,1,1,1999,12,31), 36523)]
    for (args, answer) in test_cases:
        result = daysBetweenDates(*args)
        if result != answer:
            print "Test with data:", args, "failed"
        else:
            print "Test case passed!"

test()
