def pyTriplet(p):
  num_list_square = []
  n = 0
  for i in range(size):
    if p[i] > 0:
      num_list_square.append(p[i])
  while n < len(num_list_square):
    num_list_square[n] *= num_list_square[n]
    n += 1
  for i in p[:size-1]:
    for j in p[p.index(i)+1:size]:
      c = i*i + j*j
      if c in num_list_square and i > 0 and j > 0:
        return "A Pythagorean Triplet exists!"
  return "No Pythagorean Triplet exists in the list."

#case1:  
num_list = [7,1,3,-2,5,4,-6]
size = len(num_list)
print(pyTriplet(num_list))

#case2:
num_list = [5,-2,-13,3,-12]
size = len(num_list)
print(pyTriplet(num_list))

#case3:  
num_list = [-1,0,-3,3,4,5,0]
size = len(num_list)
print(pyTriplet(num_list))
